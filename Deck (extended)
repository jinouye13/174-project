//Veronica's part

public class Deck {
	private Card[] deck;
	private int numOfCards;
	private String handType = "No pair";
	
	public Deck()
	{
		deck = new Card[52];
		
		numOfCards = 0;
        String [] suits = {"Spades","Diamonds","Clubs","Hearts"};
        
        for (int suit = 0; suit < 4; suit++)
        {
            for (int value = 1; value <= 13; value++)
            {
            	deck[numOfCards] = new Card(value,suits[suit]);
                numOfCards++;
            }
        }
	}
	
	public Card[] shuffleDeck()
	{
		for (int i = 0; i < deck.length; i++)
		{
			int index = (int)(Math.random() * deck.length);
			Card temp = deck[i];
			deck[i] = deck[index];
			deck[index] = temp;
		}
		return deck;
	}
	
	public String toString()
	{
		String deckString = "New deck created\n";
		
        for (int cards = 0; cards < 52; cards++)
        {
            deckString = deckString + deck[cards] + "\n";
        }
        
        return deckString;
	}
	
	//Jamie's contributions
	
	public Card[] getHand()
	{
		System.out.println("Here is your hand: ");
		
		Card[] hand = new Card[5];
		
		for (int cardNum = 0; cardNum < 5; cardNum++)
		{
			hand[cardNum] = deck[cardNum];
			System.out.println(hand[cardNum]);
		}
		return hand;
	}
	
	public String pronounceHand()
	{
		//in progress
	}
	
	public int payWinings()
	{
		int winnings = 0;
		if (handType.equals("One pair"))
		{
			winnings = 1;
		}
		
		else if (handType.equals("Two pairs"))
		{
			winnings = 2;
		}
		
		else if (handType.equals("Three of a kind"))
		{
			winnings = 3;
		}
		
		else if (handType.equals("Straight"))
		{
			winnings = 4;
		}
		
		else if (handType.equals("Flush"))
		{
			winnings = 5;
		}
		
		else if (handType.equals("Full House"))
		{
			winnings = 6;
		}
		
		else if (handType.equals("Four of a kind"))
		{
			winnings = 25;
		}
		
		else if (handType.equals("Straight Flush"))
		{
			winnings = 50;
		}
		
		else if (handType.equals("Royal Flush"))
		{
			winnings = 250;
		}
		
		return winnings;
	}

}
